version: '3'
services:
  api:
    container_name: api
    working_dir: /api
    env_file: .env
    build:
        context: ./api
        args:
          uid: "${HOST_USER_UID}"
    environment:
        DATABASE: ${DATABASE}
        NODE_ENV: "$NODE_ENV"
    ports:
        - "${API_PORT}:${API_PORT}"
        - "${INSPECT_PORT}:${INSPECT_PORT}"
    volumes:
        - ../.:/api
    links:
      - postgres
      - prisma
    depends_on:
      - postgres
      - prisma
    restart: unless-stopped

  # pgadmin:
  #   links:
  #     - postgres
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: 'postgres@pg.com'
  #     PGADMIN_DEFAULT_PASSWORD: 'postgres'
  #   volumes:
  #      - /data/pgadmin:/root/.pgadmin
  #   ports:
  #     - "5050:80"
  #   restart: unless-stopped

  postgres:
      image: postgres:10.5
      container_name: postgres
      volumes:
        - ../data/postgres:/data/postgres
      environment:
        POSTGRES_USER: ${DATABASE_USER}
        POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
        PGDATA: /data/postgres

      ports:
        - "${DATABASE_PORT}:${DATABASE_PORT}"
      restart: unless-stopped

  prisma:
    image: prismagraphql/prisma:1.15
    restart: always
    ports:
    - "${PRISMA_PORT}:${PRISMA_PORT}"
    links:
      - postgres
    depends_on:
      - postgres
    environment:
      PRISMA_CONFIG: |
        port: "${PRISMA_PORT}"
        # uncomment the next line and provide the env var PRISMA_MANAGEMENT_API_SECRET=my-secret to activate cluster security
        # managementApiSecret: my-secret
        databases:
          default:
            connector: postgres
            host: postgres
            port: ${DATABASE_PORT}
            user: ${DATABASE_USER}
            password: ${DATABASE_PASSWORD}
            #database: ${DATABASE}
            #schema: public
            migrations: true
